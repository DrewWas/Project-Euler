# Highly Divisible Triangular Number

"""
The sequence of triangle numbers is generated by adding the natural numbers. So
the 7th triangle number would be 1+2+3+4+5+6+7 = 28. The first ten terms would
be:

1,3,6,10,15,21,28,36,45,55

Let us list the factors of the first seven triangle numbers:

1:1
3:1,3
6:1,2,3,6
10:1,2,5,10
21:1,3,7,21
28:1,2,4,7,14,28

We can see that 28 is the first triangle number to have over 5 divisors. 
What is the value of the first triangle number to have over 500 divisors
"""

def getFactors(n):
    nums = []
    for i in range(1, int(n ** 0.5) + 1):
        if n % i == 0:
            nums.append(i)
            if int(n//i) not in nums:
                nums.append(int(n//i))
    return nums


def f():
    divisors = 0
    n = 1
    while divisors < 500:
        trinum = n * (n+1) / 2
        factors = getFactors(trinum)
        divisors = len(factors)
        print(n, int(trinum), factors, divisors)
        n += 1




print(f())


